import sys
import logging
import asyncio
import time
import openai
import qrcode
import websockets
import base64
import json
import io
import os
import json
from io import BytesIO

import pytonconnect.exceptions
from pytoniq_core import Address
from pytonconnect import TonConnect

import config
from codex_bot.messages import get_comment_message
from codex_bot.connector import get_connector

from aiogram import Bot, Dispatcher, F, types
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery, BufferedInputFile, ContentType
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.fsm.context import FSMContext
from web3 import Web3
from web3.auto import w3
from eth_account import Account

# Configure logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__file__)


web3 = Web3(Web3.HTTPProvider("https://arbitrum-goerli.infura.io/v3/5f3224c8075b407fa38911977320235b"))

# Replace this with your actual private key
private_key = '3c921f988ca214959ece9fdd941d8cf017679cd126835c8843fae9ea580c02f7'

# Create an account object from the private key
account = Account.from_key(private_key)

# Set the default account to the address derived from the private key
web3.eth.defaultAccount = account.address

if not web3.is_connected():  # Correct method name
    logger.error("Web3 failed to connect.")
else:
    logger.info("Web3 connected successfully.")



bot = Bot(config.TELEGRAM_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()

openai.api_key = config.OPENAI_API_KEY



@dp.message(Command('deploy'))
async def deploy_token(message: types.Message):
    from web3.contract import Contract
    # Load your contract
    dir_path = os.path.dirname(os.path.realpath(__file__))
    # Construct the path to mytoken.json dynamically
    abi_file_path = os.path.join(dir_path, "mytoken.json")

    try:
        with open(abi_file_path, "r") as f:
            contract_abi = json.load(f)
    except FileNotFoundError:
        await message.reply("The contract ABI file (mytoken.json) was not found.")
        return

    contract_bytecode = "6101006040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960e0908152503480156200003957600080fd5b5060405162004c8c38038062004c8c83398181016040528101906200005f9190620007f9565b84848181816005908162000074919062000b14565b50806006908162000086919062000b14565b5050504660a081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050620000d56200021760201b60201c565b6080818152505050506000831162000124576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200011b9062000c82565b60405180910390fd5b60128260ff1611156200016e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001659062000cf4565b60405180910390fd5b6200019e868360ff16600a62000185919062000e99565b8562000192919062000eea565b620002a560201b60201c565b620001af866200041e60201b60201c565b732057237aaf18f6f72552bed5733c68433bba100e600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060098190555050505050505062001099565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6200024a620004e460201b60201c565b805190602001207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc646306040516020016200028a95949392919062000f72565b60405160208183030381529060405280519060200120905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000317576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200030e906200101f565b60405180910390fd5b6200032b600083836200057e60201b60201c565b80600460008282546200033f919062001041565b9250508190555080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000397919062001041565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620003fe91906200107c565b60405180910390a36200041a600083836200058360201b60201c565b5050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7660405160405180910390a35050565b606060058054620004f5906200090d565b80601f016020809104026020016040519081016040528092919081815260200182805462000523906200090d565b8015620005745780601f10620005485761010080835404028352916020019162000574565b820191906000526020600020905b8154815290600101906020018083116200055657829003601f168201915b5050505050905090565b505050565b505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005c9826200059c565b9050919050565b620005db81620005bc565b8114620005e757600080fd5b50565b600081519050620005fb81620005d0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000656826200060b565b810181811067ffffffffffffffff821117156200067857620006776200061c565b5b80604052505050565b60006200068d62000588565b90506200069b82826200064b565b919050565b600067ffffffffffffffff821115620006be57620006bd6200061c565b5b620006c9826200060b565b9050602081019050919050565b60005b83811015620006f6578082015181840152602081019050620006d9565b60008484015250505050565b6000620007196200071384620006a0565b62000681565b90508281526020810184848401111562000738576200073762000606565b5b62000745848285620006d6565b509392505050565b600082601f83011262000765576200076462000601565b5b81516200077784826020860162000702565b91505092915050565b6000819050919050565b620007958162000780565b8114620007a157600080fd5b50565b600081519050620007b5816200078a565b92915050565b600060ff82169050919050565b620007d381620007bb565b8114620007df57600080fd5b50565b600081519050620007f381620007c8565b92915050565b60008060008060008060c0878903121562000819576200081862000592565b5b60006200082989828a01620005ea565b965050602087015167ffffffffffffffff8111156200084d576200084c62000597565b5b6200085b89828a016200074d565b955050604087015167ffffffffffffffff8111156200087f576200087e62000597565b5b6200088d89828a016200074d565b9450506060620008a089828a01620007a4565b9350506080620008b389828a01620007e2565b92505060a0620008c689828a01620007a4565b9150509295509295509295565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200092657607f821691505b6020821081036200093c576200093b620008de565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620009a67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000967565b620009b2868362000967565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620009f5620009ef620009e98462000780565b620009ca565b62000780565b9050919050565b6000819050919050565b62000a1183620009d4565b62000a2962000a2082620009fc565b84845462000974565b825550505050565b600090565b62000a4062000a31565b62000a4d81848462000a06565b505050565b5b8181101562000a755762000a6960008262000a36565b60018101905062000a53565b5050565b601f82111562000ac45762000a8e8162000942565b62000a998462000957565b8101602085101562000aa9578190505b62000ac162000ab88562000957565b83018262000a52565b50505b505050565b600082821c905092915050565b600062000ae96000198460080262000ac9565b1980831691505092915050565b600062000b04838362000ad6565b9150826002028217905092915050565b62000b1f82620008d3565b67ffffffffffffffff81111562000b3b5762000b3a6200061c565b5b62000b4782546200090d565b62000b5482828562000a79565b600060209050601f83116001811462000b8c576000841562000b77578287015190505b62000b83858262000af6565b86555062000bf3565b601f19841662000b9c8662000942565b60005b8281101562000bc65784890151825560018201915060208501945060208101905062000b9f565b8683101562000be6578489015162000be2601f89168262000ad6565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f546f74616c20737570706c79206d75737420626520677265617465722074686160008201527f6e207a65726f0000000000000000000000000000000000000000000000000000602082015250565b600062000c6a60268362000bfb565b915062000c778262000c0c565b604082019050919050565b6000602082019050818103600083015262000c9d8162000c5b565b9050919050565b7f446563696d616c73206d757374206265203138206f72206c6573730000000000600082015250565b600062000cdc601b8362000bfb565b915062000ce98262000ca4565b602082019050919050565b6000602082019050818103600083015262000d0f8162000ccd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b600185111562000da45780860481111562000d7c5762000d7b62000d16565b5b600185161562000d8c5780820291505b808102905062000d9c8562000d45565b945062000d5c565b94509492505050565b60008262000dbf576001905062000e92565b8162000dcf576000905062000e92565b816001811462000de8576002811462000df35762000e29565b600191505062000e92565b60ff84111562000e085762000e0762000d16565b5b8360020a91508482111562000e225762000e2162000d16565b5b5062000e92565b5060208310610133831016604e8410600b841016171562000e635782820a90508381111562000e5d5762000e5c62000d16565b5b62000e92565b62000e72848484600162000d52565b9250905081840481111562000e8c5762000e8b62000d16565b5b81810290505b9392505050565b600062000ea68262000780565b915062000eb38362000780565b925062000ee27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000dad565b905092915050565b600062000ef78262000780565b915062000f048362000780565b925082820262000f148162000780565b9150828204841483151762000f2e5762000f2d62000d16565b5b5092915050565b6000819050919050565b62000f4a8162000f35565b82525050565b62000f5b8162000780565b82525050565b62000f6c81620005bc565b82525050565b600060a08201905062000f89600083018862000f3f565b62000f98602083018762000f3f565b62000fa7604083018662000f3f565b62000fb6606083018562000f50565b62000fc5608083018462000f61565b9695505050505050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062001007601f8362000bfb565b9150620010148262000fcf565b602082019050919050565b600060208201905081810360008301526200103a8162000ff8565b9050919050565b60006200104e8262000780565b91506200105b8362000780565b925082820190508082111562001076576200107562000d16565b5b92915050565b600060208201905062001093600083018462000f50565b92915050565b60805160a05160c05160e051613bb9620010d36000396000610f77015260006106360152600061068c015260006106b50152613bb96000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c806379cc6790116100de578063a457c2d711610097578063d505accf11610071578063d505accf14610460578063dd62ed3e1461047c578063e8a3d485146104ac578063f2cff57f146104ca57610173565b8063a457c2d7146103d0578063a9059cbb14610400578063ac9650d81461043057610173565b806379cc67901461030e5780637ecebe001461032a5780638da5cb5b1461035a5780638f03181814610378578063938e3d7b1461039657806395d89b41146103b257610173565b80633644e515116101305780633644e5151461024e578063395093511461026c57806342966c681461029c578063449a52f8146102b85780634a641b98146102d457806370a08231146102de57610173565b806306fdde0314610178578063095ea7b31461019657806313af4035146101c657806318160ddd146101e257806323b872dd14610200578063313ce56714610230575b600080fd5b6101806104e8565b60405161018d919061222b565b60405180910390f35b6101b060048036038101906101ab91906122f5565b61057a565b6040516101bd9190612350565b60405180910390f35b6101e060048036038101906101db919061236b565b61059d565b005b6101ea6105f0565b6040516101f791906123a7565b60405180910390f35b61021a600480360381019061021591906123c2565b6105fa565b6040516102279190612350565b60405180910390f35b610238610629565b6040516102459190612431565b60405180910390f35b610256610632565b6040516102639190612465565b60405180910390f35b610286600480360381019061028191906122f5565b6106e9565b6040516102939190612350565b60405180910390f35b6102b660048036038101906102b19190612480565b610793565b005b6102d260048036038101906102cd91906122f5565b6107eb565b005b6102dc610883565b005b6102f860048036038101906102f3919061236b565b610a78565b60405161030591906123a7565b60405180910390f35b610328600480360381019061032391906122f5565b610ac1565b005b610344600480360381019061033f919061236b565b610b92565b60405161035191906123a7565b60405180910390f35b610362610be2565b60405161036f91906124bc565b60405180910390f35b610380610c0c565b60405161038d91906124bc565b60405180910390f35b6103b060048036038101906103ab919061260c565b610c32565b005b6103ba610c85565b6040516103c7919061222b565b60405180910390f35b6103ea60048036038101906103e591906122f5565b610d17565b6040516103f79190612350565b60405180910390f35b61041a600480360381019061041591906122f5565b610e01565b6040516104279190612350565b60405180910390f35b61044a600480360381019061044591906126b5565b610e24565b6040516104579190612819565b60405180910390f35b61047a60048036038101906104759190612893565b610f30565b005b61049660048036038101906104919190612935565b61107a565b6040516104a391906123a7565b60405180910390f35b6104b4611101565b6040516104c1919061222b565b60405180910390f35b6104d261118f565b6040516104df91906123a7565b60405180910390f35b6060600580546104f7906129a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610523906129a4565b80156105705780601f1061054557610100808354040283529160200191610570565b820191906000526020600020905b81548152906001019060200180831161055357829003601f168201915b5050505050905090565b600080610585611195565b905061059281858561119d565b600191505092915050565b6105a5611366565b6105e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105db90612a21565b60405180910390fd5b6105ed816113a3565b50565b6000600454905090565b600080610605611195565b9050610612858285611469565b61061d8585856114f5565b60019150509392505050565b60006012905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480156106ae57507f000000000000000000000000000000000000000000000000000000000000000046145b156106db577f000000000000000000000000000000000000000000000000000000000000000090506106e6565b6106e3611777565b90505b90565b6000806106f4611195565b9050610788818585600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107839190612a70565b61119d565b600191505092915050565b8061079d33610a78565b10156107de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d590612af0565b60405180910390fd5b6107e833826117fb565b50565b6107f36119d3565b610832576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082990612b5c565b60405180910390fd5b60008103610875576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086c90612bc8565b60405180910390fd5b61087f8282611a22565b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610913576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090a90612a21565b60405180910390fd5b600060095411610958576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094f90612c34565b60405180910390fd5b60095447101561099d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099490612ca0565b60405180910390fd5b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166009546040516109e790612cf1565b60006040518083038185875af1925050503d8060008114610a24576040519150601f19603f3d011682016040523d82523d6000602084013e610a29565b606091505b5050905080610a6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6490612d52565b60405180910390fd5b600060098190555050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610ac9611b82565b610b08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aff90612dbe565b60405180910390fd5b80610b1283610a78565b1015610b53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4a90612af0565b60405180910390fd5b600081610b60843361107a565b610b6a9190612dde565b9050610b788333600061119d565b610b8383338361119d565b610b8d83836117fb565b505050565b6000610bdb600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611bbf565b9050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c3a611bcd565b610c79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7090612a21565b60405180910390fd5b610c8281611c0a565b50565b606060068054610c94906129a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610cc0906129a4565b8015610d0d5780601f10610ce257610100808354040283529160200191610d0d565b820191906000526020600020905b815481529060010190602001808311610cf057829003601f168201915b5050505050905090565b600080610d22611195565b90506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015610de8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddf90612e84565b60405180910390fd5b610df5828686840361119d565b60019250505092915050565b600080610e0c611195565b9050610e198185856114f5565b600191505092915050565b60608282905067ffffffffffffffff811115610e4357610e426124e1565b5b604051908082528060200260200182016040528015610e7657816020015b6060815260200190600190039081610e615790505b50905060005b83839050811015610f2957610ef830858584818110610e9e57610e9d612ea4565b5b9050602002810190610eb09190612ee2565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611ce5565b828281518110610f0b57610f0a612ea4565b5b60200260200101819052508080610f2190612f45565b915050610e7c565b5092915050565b83421115610f73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6a90612fd9565b60405180910390fd5b60007f0000000000000000000000000000000000000000000000000000000000000000888888610fa28c611d12565b89604051602001610fb896959493929190612ff9565b6040516020818303038152906040528051906020012090506000610fe3610fdd610632565b83611d70565b90506000610ff382878787611db1565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611063576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105a906130a6565b60405180910390fd5b61106e8a8a8a61119d565b50505050505050505050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000805461110e906129a4565b80601f016020809104026020016040519081016040528092919081815260200182805461113a906129a4565b80156111875780601f1061115c57610100808354040283529160200191611187565b820191906000526020600020905b81548152906001019060200180831161116a57829003601f168201915b505050505081565b60095481565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361120c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120390613138565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361127b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611272906131ca565b60405180910390fd5b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161135991906123a7565b60405180910390a3505050565b6000611370610be2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7660405160405180910390a35050565b6000611475848461107a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146114ef57818110156114e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d890613236565b60405180910390fd5b6114ee848484840361119d565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611564576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155b906132c8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ca9061335a565b60405180910390fd5b6115de838383611ddc565b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611665576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165c906133ec565b60405180910390fd5b818103600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116fa9190612a70565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161175e91906123a7565b60405180910390a3611771848484611de1565b50505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6117a26104e8565b805190602001207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc646306040516020016117e095949392919061340c565b60405160208183030381529060405280519060200120905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361186a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611861906134d1565b60405180910390fd5b61187682600083611ddc565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156118fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118f490613563565b60405180910390fd5b818103600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600460008282546119559190612dde565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516119ba91906123a7565b60405180910390a36119ce83600084611de1565b505050565b60006119dd610be2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015611a1d575066038d7ea4c6800034145b905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a88906135cf565b60405180910390fd5b611a9d60008383611ddc565b8060046000828254611aaf9190612a70565b9250508190555080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611b059190612a70565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611b6a91906123a7565b60405180910390a3611b7e60008383611de1565b5050565b6000611b8c610be2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600081600001549050919050565b6000611bd7610be2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000808054611c18906129a4565b80601f0160208091040260200160405190810160405280929190818152602001828054611c44906129a4565b8015611c915780601f10611c6657610100808354040283529160200191611c91565b820191906000526020600020905b815481529060010190602001808311611c7457829003601f168201915b505050505090508160009081611ca7919061379b565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611cd992919061386d565b60405180910390a15050565b6060611d0a8383604051806060016040528060278152602001613b5d60279139611de6565b905092915050565b600080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611d5f81611bbf565b9150611d6a81611eb3565b50919050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b6000806000611dc287878787611ec9565b91509150611dcf81611fab565b8192505050949350505050565b505050565b505050565b6060611df184612111565b611e30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e2790613916565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1685604051611e589190613967565b600060405180830381855af49150503d8060008114611e93576040519150601f19603f3d011682016040523d82523d6000602084013e611e98565b606091505b5091509150611ea8828286612134565b925050509392505050565b6001816000016000828254019250508190555050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c1115611f04576000600391509150611fa2565b600060018787878760405160008152602001604052604051611f29949392919061397e565b6020604051602081039080840390855afa158015611f4b573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611f9957600060019250925050611fa2565b80600092509250505b94509492505050565b60006004811115611fbf57611fbe6139c3565b5b816004811115611fd257611fd16139c3565b5b031561210e5760016004811115611fec57611feb6139c3565b5b816004811115611fff57611ffe6139c3565b5b0361203f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161203690613a3e565b60405180910390fd5b60026004811115612053576120526139c3565b5b816004811115612066576120656139c3565b5b036120a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161209d90613aaa565b60405180910390fd5b600360048111156120ba576120b96139c3565b5b8160048111156120cd576120cc6139c3565b5b0361210d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161210490613b3c565b60405180910390fd5b5b50565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561214457829050612194565b6000835111156121575782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161218b919061222b565b60405180910390fd5b9392505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156121d55780820151818401526020810190506121ba565b60008484015250505050565b6000601f19601f8301169050919050565b60006121fd8261219b565b61220781856121a6565b93506122178185602086016121b7565b612220816121e1565b840191505092915050565b6000602082019050818103600083015261224581846121f2565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061228c82612261565b9050919050565b61229c81612281565b81146122a757600080fd5b50565b6000813590506122b981612293565b92915050565b6000819050919050565b6122d2816122bf565b81146122dd57600080fd5b50565b6000813590506122ef816122c9565b92915050565b6000806040838503121561230c5761230b612257565b5b600061231a858286016122aa565b925050602061232b858286016122e0565b9150509250929050565b60008115159050919050565b61234a81612335565b82525050565b60006020820190506123656000830184612341565b92915050565b60006020828403121561238157612380612257565b5b600061238f848285016122aa565b91505092915050565b6123a1816122bf565b82525050565b60006020820190506123bc6000830184612398565b92915050565b6000806000606084860312156123db576123da612257565b5b60006123e9868287016122aa565b93505060206123fa868287016122aa565b925050604061240b868287016122e0565b9150509250925092565b600060ff82169050919050565b61242b81612415565b82525050565b60006020820190506124466000830184612422565b92915050565b6000819050919050565b61245f8161244c565b82525050565b600060208201905061247a6000830184612456565b92915050565b60006020828403121561249657612495612257565b5b60006124a4848285016122e0565b91505092915050565b6124b681612281565b82525050565b60006020820190506124d160008301846124ad565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612519826121e1565b810181811067ffffffffffffffff82111715612538576125376124e1565b5b80604052505050565b600061254b61224d565b90506125578282612510565b919050565b600067ffffffffffffffff821115612577576125766124e1565b5b612580826121e1565b9050602081019050919050565b82818337600083830152505050565b60006125af6125aa8461255c565b612541565b9050828152602081018484840111156125cb576125ca6124dc565b5b6125d684828561258d565b509392505050565b600082601f8301126125f3576125f26124d7565b5b813561260384826020860161259c565b91505092915050565b60006020828403121561262257612621612257565b5b600082013567ffffffffffffffff8111156126405761263f61225c565b5b61264c848285016125de565b91505092915050565b600080fd5b600080fd5b60008083601f840112612675576126746124d7565b5b8235905067ffffffffffffffff81111561269257612691612655565b5b6020830191508360208202830111156126ae576126ad61265a565b5b9250929050565b600080602083850312156126cc576126cb612257565b5b600083013567ffffffffffffffff8111156126ea576126e961225c565b5b6126f68582860161265f565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60006127558261272e565b61275f8185612739565b935061276f8185602086016121b7565b612778816121e1565b840191505092915050565b600061278f838361274a565b905092915050565b6000602082019050919050565b60006127af82612702565b6127b9818561270d565b9350836020820285016127cb8561271e565b8060005b8581101561280757848403895281516127e88582612783565b94506127f383612797565b925060208a019950506001810190506127cf565b50829750879550505050505092915050565b6000602082019050818103600083015261283381846127a4565b905092915050565b61284481612415565b811461284f57600080fd5b50565b6000813590506128618161283b565b92915050565b6128708161244c565b811461287b57600080fd5b50565b60008135905061288d81612867565b92915050565b600080600080600080600060e0888a0312156128b2576128b1612257565b5b60006128c08a828b016122aa565b97505060206128d18a828b016122aa565b96505060406128e28a828b016122e0565b95505060606128f38a828b016122e0565b94505060806129048a828b01612852565b93505060a06129158a828b0161287e565b92505060c06129268a828b0161287e565b91505092959891949750929550565b6000806040838503121561294c5761294b612257565b5b600061295a858286016122aa565b925050602061296b858286016122aa565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806129bc57607f821691505b6020821081036129cf576129ce612975565b5b50919050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6000612a0b600e836121a6565b9150612a16826129d5565b602082019050919050565b60006020820190508181036000830152612a3a816129fe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612a7b826122bf565b9150612a86836122bf565b9250828201905080821115612a9e57612a9d612a41565b5b92915050565b7f4e6f7420656e6f7567682062616c616e63650000000000000000000000000000600082015250565b6000612ada6012836121a6565b9150612ae582612aa4565b602082019050919050565b60006020820190508181036000830152612b0981612acd565b9050919050565b7f4e6f7420617574686f72697a656420746f206d696e742e000000000000000000600082015250565b6000612b466017836121a6565b9150612b5182612b10565b602082019050919050565b60006020820190508181036000830152612b7581612b39565b9050919050565b7f4d696e74696e67207a65726f20746f6b656e7300000000000000000000000000600082015250565b6000612bb26013836121a6565b9150612bbd82612b7c565b602082019050919050565b60006020820190508181036000830152612be181612ba5565b9050919050565b7f4e6f206465706c6f796d656e742066656520617661696c61626c650000000000600082015250565b6000612c1e601b836121a6565b9150612c2982612be8565b602082019050919050565b60006020820190508181036000830152612c4d81612c11565b9050919050565b7f496e73756666696369656e7420636f6e74726163742062616c616e6365000000600082015250565b6000612c8a601d836121a6565b9150612c9582612c54565b602082019050919050565b60006020820190508181036000830152612cb981612c7d565b9050919050565b600081905092915050565b50565b6000612cdb600083612cc0565b9150612ce682612ccb565b600082019050919050565b6000612cfc82612cce565b9150819050919050565b7f4465706c6f796d656e7420666565207472616e73666572206661696c65640000600082015250565b6000612d3c601e836121a6565b9150612d4782612d06565b602082019050919050565b60006020820190508181036000830152612d6b81612d2f565b9050919050565b7f4e6f7420617574686f72697a656420746f206275726e2e000000000000000000600082015250565b6000612da86017836121a6565b9150612db382612d72565b602082019050919050565b60006020820190508181036000830152612dd781612d9b565b9050919050565b6000612de9826122bf565b9150612df4836122bf565b9250828203905081811115612e0c57612e0b612a41565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000612e6e6025836121a6565b9150612e7982612e12565b604082019050919050565b60006020820190508181036000830152612e9d81612e61565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112612eff57612efe612ed3565b5b80840192508235915067ffffffffffffffff821115612f2157612f20612ed8565b5b602083019250600182023603831315612f3d57612f3c612edd565b5b509250929050565b6000612f50826122bf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612f8257612f81612a41565b5b600182019050919050565b7f45524332305065726d69743a206578706972656420646561646c696e65000000600082015250565b6000612fc3601d836121a6565b9150612fce82612f8d565b602082019050919050565b60006020820190508181036000830152612ff281612fb6565b9050919050565b600060c08201905061300e6000830189612456565b61301b60208301886124ad565b61302860408301876124ad565b6130356060830186612398565b6130426080830185612398565b61304f60a0830184612398565b979650505050505050565b7f45524332305065726d69743a20696e76616c6964207369676e61747572650000600082015250565b6000613090601e836121a6565b915061309b8261305a565b602082019050919050565b600060208201905081810360008301526130bf81613083565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006131226024836121a6565b915061312d826130c6565b604082019050919050565b6000602082019050818103600083015261315181613115565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006131b46022836121a6565b91506131bf82613158565b604082019050919050565b600060208201905081810360008301526131e3816131a7565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000613220601d836121a6565b915061322b826131ea565b602082019050919050565b6000602082019050818103600083015261324f81613213565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006132b26025836121a6565b91506132bd82613256565b604082019050919050565b600060208201905081810360008301526132e1816132a5565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006133446023836121a6565b915061334f826132e8565b604082019050919050565b6000602082019050818103600083015261337381613337565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006133d66026836121a6565b91506133e18261337a565b604082019050919050565b60006020820190508181036000830152613405816133c9565b9050919050565b600060a0820190506134216000830188612456565b61342e6020830187612456565b61343b6040830186612456565b6134486060830185612398565b61345560808301846124ad565b9695505050505050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b60006134bb6021836121a6565b91506134c68261345f565b604082019050919050565b600060208201905081810360008301526134ea816134ae565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b600061354d6022836121a6565b9150613558826134f1565b604082019050919050565b6000602082019050818103600083015261357c81613540565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006135b9601f836121a6565b91506135c482613583565b602082019050919050565b600060208201905081810360008301526135e8816135ac565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026136517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613614565b61365b8683613614565b95508019841693508086168417925050509392505050565b6000819050919050565b600061369861369361368e846122bf565b613673565b6122bf565b9050919050565b6000819050919050565b6136b28361367d565b6136c66136be8261369f565b848454613621565b825550505050565b600090565b6136db6136ce565b6136e68184846136a9565b505050565b5b8181101561370a576136ff6000826136d3565b6001810190506136ec565b5050565b601f82111561374f57613720816135ef565b61372984613604565b81016020851015613738578190505b61374c61374485613604565b8301826136eb565b50505b505050565b600082821c905092915050565b600061377260001984600802613754565b1980831691505092915050565b600061378b8383613761565b9150826002028217905092915050565b6137a48261219b565b67ffffffffffffffff8111156137bd576137bc6124e1565b5b6137c782546129a4565b6137d282828561370e565b600060209050601f83116001811461380557600084156137f3578287015190505b6137fd858261377f565b865550613865565b601f198416613813866135ef565b60005b8281101561383b57848901518255600182019150602085019450602081019050613816565b868310156138585784890151613854601f891682613761565b8355505b6001600288020188555050505b505050505050565b6000604082019050818103600083015261388781856121f2565b9050818103602083015261389b81846121f2565b90509392505050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b60006139006026836121a6565b915061390b826138a4565b604082019050919050565b6000602082019050818103600083015261392f816138f3565b9050919050565b60006139418261272e565b61394b8185612cc0565b935061395b8185602086016121b7565b80840191505092915050565b60006139738284613936565b915081905092915050565b60006080820190506139936000830187612456565b6139a06020830186612422565b6139ad6040830185612456565b6139ba6060830184612456565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000613a286018836121a6565b9150613a33826139f2565b602082019050919050565b60006020820190508181036000830152613a5781613a1b565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000613a94601f836121a6565b9150613a9f82613a5e565b602082019050919050565b60006020820190508181036000830152613ac381613a87565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000613b266022836121a6565b9150613b3182613aca565b604082019050919050565b60006020820190508181036000830152613b5581613b19565b905091905056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122077d18af7bb74f4c08f347e6a0a75204ea75c95a9dc570475955ead60820daff564736f6c63430008120033"
    
    # Assume you have a function `deploy` in your contract

    print("Web3 Connected:", web3.is_connected())

    MyContract = web3.eth.contract(abi=contract_abi, bytecode=contract_bytecode)
    # Prepare the transaction
    private_key = '3c921f988ca214959ece9fdd941d8cf017679cd126835c8843fae9ea580c02f7'

    # Create an account object from the private key
    account = Account.from_key(private_key)

    # Set the default account to the address derived from the private key
    web3.eth.defaultAccount = account.address
    print(web3.eth.defaultAccount)

    address = "0x407A566Ef2134B88A731378E32b17D1e8Cd34C40"
    nonce = web3.eth.get_transaction_count(address)

    print("Default Account:", web3.eth.defaultAccount)
    print("Nonce for Account:", web3.eth.get_transaction_count(web3.eth.defaultAccount))
    MyContract = w3.eth.contract(abi=contract_abi, bytecode=contract_bytecode)

    transaction = {
        'from': account.address,
        'nonce': nonce,
        'gas': 2000000,
        'gasPrice': 10000000000,  # 10 gwei in wei
        'chainId': 421613  # Arbitrum Goerli Testnet Chain ID
    }

    _defaultAdmin = "0x407A566Ef2134B88A731378E32b17D1e8Cd34C40"  # Example admin address
    _name = "TokenName"  # Token name
    _symbol = "TNM"  # Token symbol
    _totalSupply = 1000000  # Total supply
    _decimals = 18  # Decimals
    _initialDeploymentFee = 100  # Initial deployment fee

    contract_data = MyContract.constructor(_defaultAdmin, _name, _symbol, _totalSupply, _decimals, _initialDeploymentFee).build_transaction(transaction)
    signed_txn = web3.eth.account.sign_transaction(transaction, private_key=private_key)
    tx_hash = web3.eth.send_raw_transaction(signed_txn.rawTransaction)

    tx_receipt = web3.eth.wait_for_transaction_receipt(tx_hash)

    message_details = (
        f"Token Name: {_name}\n"
        f"Symbol: {_symbol}\n"
        f"Total Supply: {_totalSupply}\n"
        f"Decimals: {_decimals}\n"
        f"Initial Deployment Fee: {_initialDeploymentFee} ETH\n"
        f"Transaction Hash: {tx_hash.hex()}\n"
        f"Contract Address: {tx_receipt.contractAddress}\n"
        f"View on Etherscan: https://goerli.etherscan.io/tx/{tx_hash.hex()}"
    )

    await message.answer(message_details)


def escape_markdown_v2(text):
    escape_chars = '_*[]()~`>#+-=|{}.!'
    return ''.join(f'\\{char}' if char in escape_chars else char for char in text)


@dp.message(Command('scan'))
async def scan_image(message: Message):
    await message.answer(text='Please upload an image to scan and convert to code.')




@dp.message(F.photo)
async def photo_handler(message: types.Message, state: FSMContext):
    base64_encoded = ''
    image_buffer = io.BytesIO()
    await bot.download(
        message.photo[-1],
        destination=image_buffer
    )
    base64_encoded = base64.b64encode(image_buffer.getvalue()).decode('utf-8')
    print(f'Base64: {base64_encoded[:100]}...{base64_encoded[-100:]}')

    # Prepare the message with the Base64-encoded image
    messagedata = json.dumps({
        'generationType': 'create',
        'image': f'data:image/jpeg;base64,{base64_encoded}',
        'openAiBaseURL': None,
        'screenshotOneApiKey': None,
        'isImageGenerationEnabled': True,
        'editorTheme': 'cobalt',
        'generatedCodeConfig': 'react_tailwind',
        'isTermOfServiceAccepted': True,
        'accessCode': None
    })

    uri = config.SCAN2CODE_WS_URL + "/generate-code"
    async with websockets.connect(uri) as websocket:
        await websocket.send(messagedata)
        print(f"> Sent: {messagedata}")

        # Start the ping/pong health check in the background
        async def health_check():
            try:
                while True:
                    await websocket.ping()
                    await asyncio.sleep(10)
            except websockets.exceptions.ConnectionClosed:
                print("WebSocket connection was closed.")
        asyncio.create_task(health_check())

        try:
            while True:
                response = await websocket.recv()
                # print(f"< Received another: {response}")
                response_json = json.loads(response)
                if "type" in response_json and response_json["type"] == "setCode":
                    escaped_code = escape_markdown_v2(response_json["value"])
                    await message.answer(
                        f'Resulting code:\n\n```\n{escaped_code}\n```',
                        parse_mode='MarkdownV2'
                    )
                elif "type" in response_json and response_json["type"] == "status":
                    await message.answer(response_json["value"])
                elif "type" in response_json and response_json["type"] == "error":
                    await message.answer(f'Error: {response_json["value"]}')
        except websockets.exceptions.ConnectionClosed as e:
            print(f"WebSocket connection closed with error: {e}")


@dp.message(Command('gpt'))
async def start_chatting(message: Message):
    command_name = '/gpt'
    message_text = message.text.replace(command_name, '', 1).strip()
    # print(f"/gpt {message_text}")
    response =  openai.completions.create(
        model="gpt-3.5-turbo-instruct",
        prompt=message_text,
        max_tokens=150
    )
    if response.choices[0].text:
        await message.answer(response.choices[0].text)
    else:
        await message.answer("no response")


@dp.message(CommandStart())
async def command_start_handler(message: Message):
    chat_id = message.chat.id
    connector = get_connector(chat_id)
    connected = await connector.restore_connection()

    mk_b = InlineKeyboardBuilder()
    if connected:
        mk_b.button(text='Send Transaction', callback_data='send_tr')
        mk_b.button(text='Disconnect', callback_data='disconnect')
        await message.answer(text='You are already connected!', reply_markup=mk_b.as_markup())

    else:
        wallets_list = TonConnect.get_wallets()
        for wallet in wallets_list:
            mk_b.button(text=wallet['name'], callback_data=f'connect:{wallet["name"]}')
        mk_b.adjust(1, )
        await message.answer(text='Choose wallet to connect', reply_markup=mk_b.as_markup())


@dp.message(Command('transaction'))
async def send_transaction(message: Message):
    connector = get_connector(message.chat.id)
    connected = await connector.restore_connection()
    if not connected:
        await message.answer('Connect wallet first!')
        return

    transaction = {
        'valid_until': int(time.time() + 3600),
        'messages': [
            get_comment_message(
                destination_address='0:0000000000000000000000000000000000000000000000000000000000000000',
                amount=int(0.01 * 10 ** 9),
                comment='hello world!'
            )
        ]
    }

    await message.answer(text='Approve transaction in your wallet app!')
    try:
        await asyncio.wait_for(connector.send_transaction(
            transaction=transaction
        ), 300)
    except asyncio.TimeoutError:
        await message.answer(text='Timeout error!')
    except pytonconnect.exceptions.UserRejectsError:
        await message.answer(text='You rejected the transaction!')
    except Exception as e:
        await message.answer(text=f'Unknown error: {e}')


async def connect_wallet(message: Message, wallet_name: str):
    connector = get_connector(message.chat.id)

    wallets_list = connector.get_wallets()
    wallet = None

    for w in wallets_list:
        if w['name'] == wallet_name:
            wallet = w

    if wallet is None:
        raise Exception(f'Unknown wallet: {wallet_name}')

    generated_url = await connector.connect(wallet)

    mk_b = InlineKeyboardBuilder()
    mk_b.button(text='Connect', url=generated_url)

    img = qrcode.make(generated_url)
    stream = BytesIO()
    img.save(stream)
    file = BufferedInputFile(file=stream.getvalue(), filename='qrcode')

    await message.answer_photo(photo=file, caption='Connect wallet within 3 minutes', reply_markup=mk_b.as_markup())

    mk_b = InlineKeyboardBuilder()
    mk_b.button(text='Start', callback_data='start')

    for i in range(1, 180):
        await asyncio.sleep(1)
        if connector.connected:
            if connector.account.address:
                wallet_address = connector.account.address
                wallet_address = Address(wallet_address).to_str(is_bounceable=False)
                await message.answer(f'You are connected with address <code>{wallet_address}</code>', reply_markup=mk_b.as_markup())
                logger.info(f'Connected with address: {wallet_address}')
            return

    await message.answer(f'Timeout error!', reply_markup=mk_b.as_markup())


async def disconnect_wallet(message: Message):
    connector = get_connector(message.chat.id)
    await connector.restore_connection()
    await connector.disconnect()
    await message.answer('You have been successfully disconnected!')

@dp.message()
async def catchall_handler(message: Message):
    print('catchall_handler')
    await message.answer("I'm sorry, I didn't understand that command.")

@dp.callback_query(lambda call: True)
async def main_callback_handler(call: CallbackQuery):
    await call.answer()
    message = call.message
    data = call.data
    if data == "start":
        await command_start_handler(message)
    elif data == "send_tr":
        await send_transaction(message)
    elif data == 'disconnect':
        await disconnect_wallet(message)
    else:
        data = data.split(':')
        if data[0] == 'connect':
            await connect_wallet(message, data[1])


async def main() -> None:
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)


def run():
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    asyncio.run(main())



if __name__ == "__main__":
    run()
